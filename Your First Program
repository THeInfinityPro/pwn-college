
YOUR FIRST REGISTER :

step 1:

# Create a file using .s extension (like name.s)

# Using vi or cat cmd to editor the file that u created

# In that file type

  mov rax, 60
  
  And save the file

Step 2:

# Type /challenge/check name.s

# To execute the program to get your flag



YOUR FIRST SYSCALL :

step 1:

# Create a file using .s extension (like name.s)

# Using vi or cat cmd to editor the file that u created

# In that file type

->  mov rax, 60

->  syscall
  
# And save the file

Step 2:

# Type /challenge/check name.s

# To execute the program to get your flag



EXIT CODES :

step 1:

# Create a file using .s extension (like name.s)

# Using vi or cat cmd to editor the file that u created

# In that file type

->  mov rdi, 42

->  mov rax, 60

->  syscall
  
# And save the file

Step 2:

# Type /challenge/check name.s

# To execute the program to get your flag



BUILDING EXECUTABLES :

step 1:

# Create a file using .s extension (like name.s)

# Using vi or cat cmd to editor the file that u created

# In that file type

->  .intel_syntex noprefix

->  .global _start

->  ._start: 

->  mov rdi, 42

->  mov rax, 60

->  syscall
  
#  And save the file

#  Then Use the cmd to as to convert the assembles file into binary code 

->  as -o name.o name.s

#  Then link the file using ld cmd

->  ld -o exe name.o

Step 2:

# Type /challenge/check ./exe

# To execute the program to get your flag


MOVING BETWEEN REGISTERS :

step 1:

# Create a file using .s extension (like name.s)

# Using vi or cat cmd to editor the file that u created

# In that file type

->  mov rdi, rsi

->  mov rax, 60

->  syscall
  
# And save the file

Step 2:

# Type /challenge/check name.s

# To execute the program to get your flag
